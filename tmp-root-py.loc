module tmp-root-py (*)

import tmp-root

source Py from "root.py"
    ( "morloc_fst" as fst
    , "morloc_snd" as snd
    , "morloc_toFst" as toFst
    , "morloc_toSnd" as toSnd
    , "morloc_fst3" as fst3
    , "morloc_snd3" as snd3
    , "morloc_thr3" as thr3
    , "morloc_ifelse" as ifelse
    , "morloc_not" as not
    , "morloc_and" as and
    , "morloc_or" as or
    -- , "morloc_nothing" as nothing
    -- , "morloc_just" as just
    -- , "morloc_fromJust" as fromJust
    -- , "morloc_isNothing" as isNothing
    )

-- This approach of defining generic instances reduces repetition when every
-- instance will source the same function (the generic "==" function from Python,
-- here). However, it also implies that ALL types are members, even though some
-- things cannot be meaningfully equated. I need a better system.
instance Eq a where
  -- this will work for any type that defines a '==' operator
  source Py from "root.py" ("morloc_eq" as eq)

instance Ord a where
  -- this will work for any type that defines a '<=' operator
  source Py from "root.py" ("morloc_le" as le)

instance Integral Int where
  source Py from "root.py"
    ( "morloc_neg" as neg
    , "morloc_add" as add
    , "morloc_sub" as sub
    )
  zero = 0

instance Integral Real where
  source Py from "root.py"
    ( "morloc_neg" as neg
    , "morloc_add" as add
    , "morloc_sub" as sub
    )
  zero = 0.0

instance Numeric Real where
  source Py from "root.py"
    ( "morloc_inv" as inv
    , "morloc_mul" as mul
    , "morloc_div" as div
    , "morloc_exp" as exp
    , "morloc_log" as log
    )
  one = 1.0


instance Monoid Str where
  mempty = ""
  source Py from "root.py" ("morloc_add" as mappend)

instance Monoid (List a) where
  mempty = []
  source Py from "root.py" ("morloc_add" as mappend)


instance Foldable List where
  -- this will apply to any object in Python that is iterable
  source Py from "root.py" ("morloc_fold" as fold)

instance Functor List where
  source Py from "root.py" ("morloc_map_list" as map)

instance Sequence List where
  empty = []
  source Py from "root.py"
    ( "morloc_at" as at
    , "morloc_slice" as slice
    )
